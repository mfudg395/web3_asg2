{"version":3,"sources":["components/HomeBrowser.js","components/PlayCard.js","components/PlayList.js","components/PlayBrowser.js","components/PlayFilter.js","components/FavoriteItem.js","components/FavoriteBar.js","components/PlayGeneralInfo.js","components/PlayCharacter.js","components/PlaySpeech.js","components/PlayScene.js","components/PlayAct.js","components/PlayText.js","components/Tab.js","components/Tabs.js","components/PlayDetailTabs.js","components/PlayTextSearch.js","components/PlayDetails.js","assets/images/logo.png","components/Header.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["HomeBrowser","props","useState","input","setInput","className","CSSTransition","classNames","timeout","enter","exit","appear","in","htmlFor","id","type","placeholder","onInput","e","target","value","to","onClick","searchPlays","searchAllPlays","PlayCard","src","play","title","replace","alt","favState","likelyDate","viewPlay","favoritePlay","filename","PlayList","handleSort","currentTarget","name","sortPlays","plays","map","p","PlayBrowser","isEmpty","PlayFilter","filterTitle","updateFilterTitle","filterBeforeYear","updateFilterBeforeYear","filterAfterYear","updateFilterAfterYear","filterGenre","updateFilterGenre","handleChange","onChange","defaultValue","isNaN","alert","filterPlays","FavoriteItem","showFavs","removePlay","FavoriteBar","favPlays","PlayGeneralInfo","synopsis","PlayCharacter","character","desc","playSpeech","speech","speaker","lines","line","searchWords","textToHighlight","PlayScene","speakerSpeeches","scene","speeches","filter","stageDirection","sp","PlaySpeech","length","PlayAct","act","scenes","textSelection","char","undefined","PlayText","text","acts","Tab","label","toLowerCase","setTextTabSelected","this","activeTab","Component","Tabs","onClickTabItem","tab","setState","state","children","child","PlayDetailTabs","hasPlayInfo","genre","href","wiki","gutenberg","shakespeareOrg","playInfo","persona","c","player","PlayTextSearch","handleOnChange","currSelection","cloneDeep","console","log","setTextSelection","for","find","s","setSearchWords","split","PlayDetails","setPlayInfo","setHasPlayInfo","textTabSelected","useEffect","getData","a","localStorage","getItem","url","fetch","response","json","data","setItem","JSON","stringify","parse","Header","Logo","aboutOnClick","About","closeModal","Modal","setAppElement","document","querySelector","App","setPlays","isLoading","setIsLoading","sort","b","playResults","setPlayResults","query","showDetails","setShowDetails","results","includes","sortField","playsCopy","favoritePlays","setFavoritePlays","addFavorite","favPlay","dupe","forEach","isDuplicate","concat","removeFavorite","newFavorites","index","indexOf","splice","setShowFavs","toggleDisplay","beforeYear","afterYear","React","modalIsOpen","setIsOpen","mainStyle","changeMainStyle","openModal","currentPlay","setCurrentPlay","path","exact","render","style","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","basename","process","getElementById"],"mappings":"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","file":"static/js/main.ffca893d.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport '../assets/css/HomeBrowser.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\n/**\r\n * The HomeBrowser is the box on the homepage that allows the user to search for plays\r\n * upon first loading the website. \r\n */\r\nconst HomeBrowser = function (props) {\r\n    \r\n    const [input, setInput] = useState(\"\");\r\n\r\n    const handleSearch = () => props.searchPlays(input);\r\n\r\n    const handleSearchAll = () => props.searchAllPlays();\r\n\r\n    return (\r\n        <div className=\"home-page\">\r\n            <CSSTransition\r\n                classNames=\"home-animation\"\r\n                timeout={{ enter: 500, exit: 300, appear: 1000 }}\r\n                appear={true}\r\n                enter={false}\r\n                exit={false}\r\n                in={true}>\r\n                <div className=\"HomeBrowserContainer\">\r\n\r\n                    <label htmlFor=\"title-input\" id=\"title-label\">Title</label>\r\n                    <input type=\"text\" id=\"title-input\" placeholder=\"Search plays\" onInput={e => setInput(e.target.value)}></input>\r\n                    <div className=\"line-break\"></div>\r\n                    <Link to='/browse'>\r\n                        <button onClick={handleSearch} id=\"matching-plays-button\" className=\"search-button\">Search Matching Plays</button>\r\n                        <button onClick={handleSearchAll} id=\"all-plays-button\" className=\"search-button\" >Search All Plays</button>\r\n                    </Link>\r\n                    <div className=\"line-break\"></div>\r\n                    {/* https://unsplash.com/photos/YLSwjSy7stw */}\r\n                    <div>Hero image credit: Alfons Morales, unsplash.com</div>\r\n                </div>\r\n            </CSSTransition>\r\n        </div>\r\n    )\r\n}\r\nexport default HomeBrowser;","import React from 'react';\r\n\r\nconst PlayCard = (props) => {\r\n\r\n    const handleFavoriteClick = () => {\r\n        props.favoritePlay(props.play.id);\r\n    }\r\n\r\n    const handleViewClick = () => {\r\n        props.viewPlay(props.play.id);\r\n    }\r\n\r\n    // on Randy's suggestion, taken from https://placeholder.com/\r\n    const src = `https://via.placeholder.com/300.png/?text=${props.play.title.replace(/\\s/g, '+')}`\r\n\r\n    return (\r\n        <div className=\"play-card\">\r\n            <img src={src} alt={props.play.title} className=\"play-card-image\"/>\r\n            <p className={props.favState ? \"title-and-year\" : \"title-and-year\"}>{props.play.title} ({props.play.likelyDate})</p>\r\n            <div className=\"play-card-button-container\">\r\n                <button className={props.favState ? \"view-button\" : \"view-button\"} onClick={handleViewClick}>View</button><button className=\"favorite-button\" onClick={handleFavoriteClick}>❤️</button>{props.play.filename != \"\" ? <span className=\"has-text-icon\">📙</span> : null}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayCard;","import _ from 'lodash';\r\nimport React from 'react';\r\nimport PlayCard from './PlayCard';\r\n\r\nconst PlayList = (props) => {\r\n\r\n    const handleSort = (e) => {\r\n        if (e.currentTarget.name == \"title\") {\r\n            props.sortPlays(\"title\");\r\n        } else {\r\n            props.sortPlays(\"year\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"black-border\">\r\n            <div className=\"sort-container\">\r\n                <h2 className=\"inline-block\">Sort by:</h2>\r\n                <button className=\"sort-title-button\" name=\"title\" onClick={handleSort}>Title</button>\r\n                <button className=\"sort-year-button\" name=\"year\" onClick={handleSort}>Year</button>\r\n                <span className=\"legend-icon\">❤️ - Add to Favorites</span>\r\n                <span className=\"legend-icon\">📙 - Text available</span>\r\n            </div>\r\n            <div className=\"plays-list grid-item\">\r\n                {props.plays.map(p => <PlayCard play={p} key={p.id} favoritePlay={props.favoritePlay} viewPlay={props.viewPlay} favState={props.favState}/>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayList;","import { isEmpty } from 'lodash';\r\nimport React from 'react';\r\n// import HomeBrowser from \"./HomeBrowser.js\";\r\nimport PlayList from './PlayList.js';\r\n\r\nconst PlayBrowser = (props) => {\r\n    return (\r\n        <div className={props.favState ? \"playBrowser\" : \"playBrowser playBrowser-fav-hidden\"}>\r\n            {!isEmpty(props.plays) ? <PlayList plays={props.plays} sortPlays={props.sortPlays} favoritePlay={props.favoritePlay} viewPlay={props.viewPlay} favState={props.favState}/> : <div className=\"grid-item plays-list black-border\">No plays found.</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayBrowser;","import React, {useEffect, useState} from 'react';\r\n\r\nconst PlayFilter = (props) => {\r\n\r\n    const [filterTitle, updateFilterTitle] = useState(\"\");\r\n    const [filterBeforeYear, updateFilterBeforeYear] = useState(\"\");\r\n    const [filterAfterYear, updateFilterAfterYear] = useState(\"\");\r\n    const [filterGenre, updateFilterGenre] = useState(\"\");\r\n\r\n    /**\r\n     * Called when the Filter button is clicked. Before the playResults array\r\n     * is filtered, the years are checked to ensure that they are numbers.\r\n     */\r\n    const processFilter = () => {\r\n        if ((filterBeforeYear !== \"\" && isNaN(filterBeforeYear)) ||\r\n                (filterAfterYear !==\"\" && isNaN(filterAfterYear))) {\r\n            alert(\"Please put a valid year for the year filters.\");\r\n            return;\r\n        }\r\n        props.filterPlays(filterTitle, filterBeforeYear, filterAfterYear, filterGenre);\r\n    }\r\n\r\n    /**\r\n     * all plays in the PlayList. Because of how filterPlays behaves, a blank\r\n     * string is essentially a \"no filter\" option for each field, which is why\r\n     * that's the only thing we have to pass to reset the plays.\r\n     */\r\n    const clearFilter = () => {\r\n        props.filterPlays(\"\", \"\", \"\", \"\");\r\n    }\r\n\r\n    /**\r\n     * This method is called each time a field in the Filters menu changes. It\r\n     * updates the appropriate state value based on the field that was edited.\r\n     */\r\n    const handleChange = (e) => {\r\n        if (e.currentTarget.name === \"title-filter\")\r\n            updateFilterTitle(e.currentTarget.value);\r\n        else if (e.currentTarget.name === \"before-year-filter\")\r\n            updateFilterBeforeYear(e.currentTarget.value);\r\n        else if (e.currentTarget.name === \"after-year-filter\")\r\n            updateFilterAfterYear(e.currentTarget.value);\r\n        else\r\n            updateFilterGenre(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"filter\">\r\n            <h2>Filters</h2>\r\n            <br/>\r\n            <label htmlFor=\"title-filter\" className=\"filter-label\">Title:</label>\r\n            <input type=\"text\" name=\"title-filter\" className=\"filter-input\" onChange={handleChange}></input>\r\n\r\n            <label htmlFor=\"before-year-filter\" className=\"filter-label\">Before year:</label>\r\n            <input type=\"text\" name=\"before-year-filter\" className=\"filter-input\" onChange={handleChange}></input>\r\n\r\n            <label htmlFor=\"after-year-filter\" className=\"filter-label\">After year:</label>\r\n            <input type=\"text\" name=\"after-year-filter\" className=\"filter-input\" onChange={handleChange}></input>\r\n\r\n            <label htmlFor=\"genre-filter\" className=\"filter-label\">Genre:</label>\r\n            <select name=\"genre-filter\" defaultValue=\"none\" className=\"filter-input\" onChange={handleChange}>\r\n                <option value=\"\"></option>\r\n                <option value=\"comedy\">Comedy</option>\r\n                <option value=\"tragedy\">Tragedy</option>\r\n                <option value=\"history\">History</option>\r\n            </select>\r\n\r\n            <button className=\"filter-button\" onClick={processFilter}>Filter</button>\r\n            <button className=\"clear-filter-button\" onClick={clearFilter}>Clear</button>\r\n        </div>\r\n    )\r\n}\r\nexport default PlayFilter;","import React from \"react\";\r\n\r\nconst FavoriteItem = (props) => {\r\n\r\n    const handleClick = () => {\r\n        props.removePlay(props.play);\r\n    }\r\n\r\n    const handleViewClick = () => {\r\n        props.viewPlay(props.play.id);\r\n    }\r\n\r\n    return (\r\n        <span>\r\n            <p className={ props.showFavs ? \"favorite-item\" : \"favorite-item-hidden\"}>\r\n                <button className=\"remove-favorite\" onClick={handleClick}>❌</button>\r\n                <span onClick={handleViewClick}>{props.play.title} ({props.play.likelyDate})</span>\r\n            </p>\r\n        </span>\r\n    );\r\n}\r\n\r\nexport default FavoriteItem;","import React from \"react\";\r\nimport FavoriteItem from \"./FavoriteItem.js\";\r\n\r\nconst FavoriteBar = (props) => {\r\n\r\n    return (\r\n        <article>\r\n             <h2 className={props.showFavs ? \"favorites-header\" : \"favorites-header-hidden\"}>Favorites❤️</h2>\r\n            {props.favPlays.map(p => <FavoriteItem play={p} key={p.id} removePlay={props.removePlay} viewPlay={props.viewPlay} showFavs={props.showFavs}/>)}\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default FavoriteBar;","import React from 'react';\r\n\r\nconst PlayGeneralInfo = (props) => {\r\n    \r\n    const handleCloseClick = () => props.viewPlay(props.play.id);\r\n\r\n    const handleFavoriteClick = () => props.favoritePlay(props.play.id);\r\n\r\n    // on Randy's suggestion, taken from https://placeholder.com/\r\n    const src = `https://via.placeholder.com/250.png/?text=${props.play.title.replace(/\\s/g, '+')}`\r\n\r\n    return (\r\n        <div className=\"details-general\">\r\n            <img src={src} alt={props.play.title} />\r\n            <h2>{props.play.title}</h2>\r\n            <p>{props.play.synopsis}</p>\r\n            <button className=\"details-close-button\" onClick={handleCloseClick}>Close</button><button className=\"details-favorite-button\" onClick={handleFavoriteClick}>❤️</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayGeneralInfo;","import React from 'react';\r\n\r\nconst PlayCharacter = (props) => {\r\n    return (\r\n        <div>\r\n            <p>{props.character} - {props.desc}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayCharacter;","import React from 'react';\r\nimport Highlighter from 'react-highlight-words';\r\n\r\nconst playSpeech = (props) => {\r\n    return (\r\n        <div>\r\n            <h4>{props.speech.speaker}</h4>\r\n            {props.speech.lines.map(line => <p><Highlighter searchWords={props.searchWords} textToHighlight={line} /></p>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default playSpeech;","import React from 'react';\r\nimport PlaySpeech from './PlaySpeech';\r\n\r\nconst PlayScene = (props) => {\r\n    let speakerSpeeches = props.scene.speeches;\r\n    speakerSpeeches = speakerSpeeches.filter(speech => speech.speaker === props.speaker);\r\n    if (props.speaker === \"allPlayers\") {\r\n        return (\r\n            <div>\r\n                <h3>{props.scene.name}</h3>\r\n                <hr />\r\n                <p>{props.scene.title}</p>\r\n                <p><em>{props.scene.stageDirection}</em></p>\r\n                {props.scene.speeches.map(sp => <PlaySpeech speech={sp} searchWords={props.searchWords} />)}\r\n            </div>\r\n        )\r\n    } else if (speakerSpeeches.length === 0) {\r\n        return (\r\n            <div>\r\n                <p>No text found for <em>{props.speaker}.</em></p>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                <h3>{props.scene.name}</h3>\r\n                <hr />\r\n                <p>{props.scene.title}</p>\r\n                <p><em>{props.scene.stageDirection}</em></p>\r\n                {speakerSpeeches.map(sp => <PlaySpeech speech={sp} searchWords={props.searchWords} />)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default PlayScene;","import React from 'react';\r\nimport PlayScene from './PlayScene';\r\n\r\nconst PlayAct = (props) => {\r\n    if (props.scene === \"SCENE I\") {\r\n        return (\r\n            <div className=\"details-text\">\r\n                <h2>{props.act.name}</h2>\r\n                <PlayScene scene={props.act.scenes[0]} speaker={props.textSelection.char} searchWords={props.searchWords} />\r\n            </div>\r\n        )\r\n    } else if (props.scene === \"SCENE II\") {\r\n        return (\r\n            <div className=\"details-text\">\r\n                <h2>{props.act.name}</h2>\r\n                <PlayScene scene={props.act.scenes[1]} speaker={props.textSelection.char} searchWords={props.searchWords} />\r\n            </div>\r\n        )\r\n    } else if (props.scene === \"SCENE III\") {\r\n        /**\r\n         * Not every act has a third scene, so this conditional handles that situation. If the user has Scene III selected,\r\n         * and then switches to an act without a Scene III, it will default to the first scene of the newly-chosen act.\r\n         */\r\n        if (props.act.scenes[2] !== undefined) {\r\n            return (\r\n                <div className=\"details-text\">\r\n                    <h2>{props.act.name}</h2>\r\n                    <PlayScene scene={props.act.scenes[2]}speaker={props.textSelection.char} searchWords={props.searchWords} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"details-text\">\r\n                    <h2>{props.act.name}</h2>\r\n                    <PlayScene scene={props.act.scenes[0]}speaker={props.textSelection.char} searchWords={props.searchWords} />\r\n                </div>\r\n            )\r\n        }\r\n        \r\n    }\r\n    \r\n}\r\n\r\nexport default PlayAct;","import React from \"react\";\r\nimport PlayAct from \"./PlayAct\";\r\n\r\nconst PlayText = (props) => {\r\n  if (props.textSelection.act === \"ACT I\") \r\n    return <PlayAct act={props.text.acts[0]} scene={props.textSelection.scene} textSelection={props.textSelection} searchWords={props.searchWords} />;\r\n  else if (props.textSelection.act === \"ACT II\")\r\n    return <PlayAct act={props.text.acts[1]} scene={props.textSelection.scene} textSelection={props.textSelection} searchWords={props.searchWords} />;\r\n  else if (props.textSelection.act === \"ACT III\")\r\n    return <PlayAct act={props.text.acts[2]} scene={props.textSelection.scene} textSelection={props.textSelection} searchWords={props.searchWords} />;\r\n};\r\n\r\nexport default PlayText;\r\n","// Taken from https://www.digitalocean.com/community/tutorials/react-tabs-component\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Tab extends Component {\r\n\r\n    static propTypes = {\r\n        activeTab: PropTypes.string.isRequired,\r\n        label: PropTypes.string.isRequired,\r\n        onClick: PropTypes.func.isRequired,\r\n    };\r\n\r\n    onClick = () => {\r\n        if (this.props.label.length > 0) {\r\n            const { label, onClick } = this.props;\r\n            onClick(label);\r\n        }\r\n        if (this.props.label.toLowerCase() === \"text\") {\r\n            this.props.setTextTabSelected(true);\r\n        } else {\r\n            this.props.setTextTabSelected(false);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            onClick,\r\n            props: {\r\n                activeTab,\r\n                label,\r\n            },\r\n        } = this;\r\n\r\n        let className = 'tab-list-item';\r\n\r\n        if (activeTab === label) {\r\n            className += ' tab-list-active';\r\n        }\r\n\r\n        return (\r\n            <li\r\n                className={className}\r\n                onClick={onClick}\r\n            >\r\n                {label}\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tab;","// Taken from https://www.digitalocean.com/community/tutorials/react-tabs-component\r\nimport React, { Component, setState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Tab from './Tab';\r\n\r\nclass Tabs extends Component {\r\n    static propTypes = {\r\n        children: PropTypes.instanceOf(Array).isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeTab: this.props.children[0].props.label,\r\n        };\r\n    }\r\n\r\n    onClickTabItem = (tab) => {\r\n        this.setState({ activeTab: tab });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            onClickTabItem,\r\n            props: {\r\n                children,\r\n            },\r\n            state: {\r\n                activeTab,\r\n            }\r\n        } = this;\r\n\r\n        return (\r\n            <div className=\"tabs\">\r\n                <ol className=\"tab-list\">\r\n                    {children.map((child) => {\r\n                        const { label } = child.props;\r\n\r\n                        return (\r\n                            <Tab\r\n                                setTextTabSelected={this.props.setTextTabSelected}\r\n                                activeTab={activeTab}\r\n                                key={label}\r\n                                label={label}\r\n                                onClick={onClickTabItem}\r\n                            />\r\n                        );\r\n                    })}\r\n                </ol>\r\n                <div className=\"tab-content\">\r\n                    {children.map((child) => {\r\n                        if (child.props.label !== activeTab) return undefined;\r\n                        return child.props.children;\r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tabs;","import React from 'react';\r\nimport PlayCharacter from './PlayCharacter';\r\nimport PlayText from './PlayText';\r\nimport Tabs from \"./Tabs\";\r\n\r\nconst PlayDetailTabs = (props) => {\r\n\r\n    return (\r\n        <div className=\"details-tabs\">\r\n            {props.hasPlayInfo ? // to display character and text tabs\r\n                <Tabs setTextTabSelected={props.setTextTabSelected} >\r\n                    <div label=\"Details\">\r\n                        <p><strong>Likely date of composition:</strong> {props.play.likelyDate}</p>\r\n                        <p><strong>Genre:</strong> {props.play.genre}</p>\r\n                        <p><a href={props.play.wiki}>Wiki</a> - <a href={props.play.gutenberg}>Gutenberg</a> - <a href={props.play.shakespeareOrg}>Shakespeare.org</a></p>\r\n                        <p><strong>Description:</strong> {props.play.desc}</p>\r\n                    </div>\r\n                    <div label=\"Characters\">\r\n                        {props.playInfo.persona.map(c => <PlayCharacter character={c.player} desc={c.desc} key={c.player} />)}\r\n                    </div>\r\n                    <div label=\"Text\">\r\n                        {<PlayText text={props.playInfo} textSelection={props.textSelection} searchWords={props.searchWords} />}\r\n                    </div>\r\n                </Tabs>\r\n                : // to only display details tab\r\n                <Tabs setTextTabSelected={props.setTextTabSelected}>\r\n                    <div label=\"Details\">\r\n                        <p><strong>Likely date of composition:</strong> {props.play.likelyDate}</p>\r\n                        <p><strong>Genre:</strong> {props.play.genre}</p>\r\n                        <p><a href={props.play.wiki}>Wiki</a> - <a href={props.play.gutenberg}>Gutenberg</a> - <a href={props.play.shakespeareOrg}>Shakespeare.org</a></p>\r\n                        <p><strong>Description:</strong> {props.play.desc}</p>\r\n                    </div>\r\n                    <div label=\"\"></div>{/* an empty tab is the only thing between me and my forever-sleep*/}\r\n                </Tabs>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayDetailTabs;","import React from 'react';\r\nimport * as cloneDeep from 'lodash/cloneDeep';\r\n\r\nconst PlayTextSearch = (props) => {\r\n\r\n    const handleCloseClick = () => props.viewPlay(props.play.id);\r\n\r\n    const handleFavoriteClick = () => props.favoritePlay(props.play.id);\r\n\r\n    // on Randy's suggestion, taken from https://placeholder.com/\r\n    const src = `https://via.placeholder.com/250.png/?text=${props.play.title.replace(/\\s/g, '+')}`\r\n\r\n    const handleOnChange = (e) => {\r\n        const currSelection = cloneDeep(props.textSelection);\r\n        if (e.target.name === \"act\") {\r\n            currSelection.act = e.target.value;\r\n        } else if (e.target.name === \"scene\") {\r\n            currSelection.scene = e.target.value;\r\n        } else if (e.target.name === \"char\") {\r\n            currSelection.char = e.target.value;\r\n        } else {\r\n            console.log(\"didn't change act, scene, or character\")\r\n        }\r\n        props.setTextSelection(currSelection);\r\n    }\r\n\r\n    const handleSearch = (e) => {\r\n        props.setSearchWords(e.target.value.split(\" \"));\r\n    }\r\n\r\n    return (\r\n        <div className=\"details-general\">\r\n            <img src={src} alt={props.play.title} />\r\n            <h2>{props.play.title}</h2>\r\n            <label for=\"act\">Act</label>\r\n            <select name=\"act\" id=\"act\" className=\"details-search-option\" onChange={handleOnChange}>\r\n                {props.playInfo.acts.map(act => <option value={act.name}>{act.name}</option>)}\r\n            </select>\r\n            <br/>\r\n            <label for=\"scene\">Scene</label>\r\n            <select name=\"scene\" id=\"scene\" className=\"details-search-option\" onChange={handleOnChange}>\r\n                {props.playInfo.acts.find(act => act.name === props.textSelection.act).scenes.map(s => <option value={s.name}>{s.name}</option>)}\r\n            </select>\r\n            <br/>\r\n            <div>\r\n                <label for=\"char\">Character</label>\r\n                <select name=\"char\" id=\"char\" className=\"details-search-option\" onChange={handleOnChange}>\r\n                    <option value=\"allPlayers\">ALL PLAYERS</option>\r\n                    {props.playInfo.persona.map(p => <option value={p.player}>{p.player}</option>)}\r\n                </select>\r\n                <br/>\r\n                <label for=\"highlight\">Highlight text</label>\r\n                <input type=\"text\" name=\"highlight\" id=\"highlight\" placeholder=\"Search\" className=\"details-search-option\" onChange={handleSearch}></input>\r\n            </div>\r\n            <br/>\r\n            <button className=\"details-close-button\" onClick={handleCloseClick}>Close</button><button className=\"details-favorite-button\" onClick={handleFavoriteClick}>❤️</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayTextSearch;","/**\r\n* The general data flow of the \"Play Details\" view is as follows:\r\n* 1. If the selected play has characters and text, that Play object is retrieved and set to the playInfo hook.\r\n*      - The hasPlayInfo hook is then set to \"true\"; if hasPlayInfo is false, the Characters and Text tabs will disappear.\r\n* \r\n* 2. The textSelection hook is filled with default data; that is, ACT I, SCENE I, and allPlayers.\r\n*      - textSelection is an object that contains the user's selected act, scene, and speaker, with each stored as a string.\r\n*      - Not to be confused with textTabSelected, which is an unrelated boolean stating if the user is in the \"Text\" tab.\r\n*\r\n* 3. The details for the selected play are rendered, and textSelection is passed as a prop to the PlayDetailTabs and \r\n*    PlayTextSearch components.\r\n*      - PlayDetailTabs is the component that contains the \"Details\", \"Characters\", and \"Text\" tabs. The \"Text\" tab shows the\r\n*        play's script for the currently selected act, scene, and speaker (or all speakers, if that's what's selected).\r\n*      - PlayTextSearch contains the dropdown menus to select different acts/scenes/speakers. Whenever one of these menus\r\n*        is changed, setTextSelection is called to update the new chosen act/scene/speaker, and PlayDetailTabs is re-rendered\r\n*        to reflect those changes.\r\n*\r\n* 4. When rendering the \"Text\" tab, the selected act, scene, and speaker will propogate down to each component in this order:\r\n*    PlayDetailTabs > PlayText > PlayAct > PlayScene > PlaySpeech\r\n*      - PlayDetailTabs could be considered the highest level component in this hierarchy, since it contains our playInfo and\r\n*        textSelection hooks. These hooks are passed as props to the above components so that each act, scene, and speech can\r\n*        be rendered according to the user's selection.\r\n*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PlayGeneralInfo from \"./PlayGeneralInfo\";\r\nimport PlayDetailTabs from \"./PlayDetailTabs\";\r\nimport PlayTextSearch from \"./PlayTextSearch\";\r\n\r\nconst PlayDetails = (props) => {\r\n  const [playInfo, setPlayInfo] = useState({});\r\n  const [hasPlayInfo, setHasPlayInfo] = useState(false);\r\n\r\n  const [textTabSelected, setTextTabSelected] = useState(false);\r\n  const [textSelection, setTextSelection] = useState({});\r\n\r\n  const [searchWords, setSearchWords] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      if (!localStorage.getItem(props.play.id)) { // if not in localstorage\r\n        if (props.play.filename != \"\") { // if play has characters & text\r\n          const url = `https://www.randyconnolly.com//funwebdev/3rd/api/shakespeare/play.php?name=${props.play.id}`;\r\n          const response = await fetch(url);\r\n          const data = await response.json();\r\n          setPlayInfo(data);\r\n          setTextSelection({\r\n            act: data.acts[0].name,\r\n            scene: data.acts[0].scenes[0].name,\r\n            char: \"allPlayers\",\r\n          });\r\n          setHasPlayInfo(true);\r\n          localStorage.setItem(props.play.id, JSON.stringify(data));\r\n        }\r\n      } else {\r\n        const data = JSON.parse(localStorage.getItem(props.play.id));\r\n        setPlayInfo(data);\r\n        setTextSelection({\r\n          act: data.acts[0].name,\r\n          scene: data.acts[0].scenes[0].name,\r\n          char: \"allPlayers\",\r\n        });\r\n        setHasPlayInfo(true);\r\n      }\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"details-panel\">\r\n      {/* if open detail tab is \"text\", display textsearch instead of PlayGeneralInfo */}\r\n      {textTabSelected ? (\r\n        <PlayTextSearch\r\n          play={props.play}\r\n          playInfo={playInfo}\r\n          viewPlay={props.viewPlay}\r\n          favoritePlay={props.favoritePlay}\r\n          textSelection={textSelection}\r\n          setTextSelection={setTextSelection}\r\n          setSearchWords={setSearchWords}\r\n        />\r\n      ) : (\r\n        <PlayGeneralInfo\r\n          play={props.play}\r\n          viewPlay={props.viewPlay}\r\n          favoritePlay={props.favoritePlay}\r\n        />\r\n      )}\r\n      <PlayDetailTabs\r\n        play={props.play}\r\n        playInfo={playInfo}\r\n        hasPlayInfo={hasPlayInfo}\r\n        textSelection={textSelection}\r\n        setTextSelection={setTextSelection}\r\n        setTextTabSelected={setTextTabSelected}\r\n        searchWords={searchWords}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayDetails;","export default __webpack_public_path__ + \"static/media/logo.e66a4045.png\";","import React from \"react\";\r\nimport Logo from \"../assets/images/logo.png\";\r\nimport { Link } from 'react-router-dom'; \r\n\r\nconst Header = (props) => {\r\n\r\n    const handleClick = () => {\r\n        props.aboutOnClick();\r\n    }\r\n\r\n    return (\r\n        <header className=\"list-view-header\">\r\n            <div className=\"flex-container flex-vertical-center\">\r\n                {/* <!-- logo source: https://toppng.com/free-image/experience-the-discussion-online-library-book-logo-PNG-free-PNG-Images_189362 --> */}\r\n                <Link to=\"/home\">\r\n                    <img src={Logo} title=\"Book Logo\" alt=\"Book Logo\" className=\"site-logo\" />\r\n                </Link>\r\n                <button className=\"about-button\" onClick={handleClick}>About</button>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './about.css';\r\n\r\nconst About = (props) => {\r\n\r\n    const handleClose = () => {\r\n        props.closeModal();\r\n    }\r\n\r\n    return (\r\n        <article className=\"modal-main about-pane\">\r\n            <h1>About</h1>\r\n            <p><b>Group Members:</b> Anthony Dang, Matthew Fudge, Nahuel Paladino</p>\r\n            <p><b>GitHub Link:</b> <a href=\"https://github.com/npala043/web3_asg1\">https://github.com/npala043/web3_asg1</a></p>\r\n            <p><b>Packages and libraries used:</b></p>\r\n                <ul>\r\n                    <li>react-router-dom</li>\r\n                    <li>react-transition-group</li>\r\n                    <li>react-modal</li>\r\n                    <li>react-tabs-component</li>\r\n                    <li>react-highlight-words</li>\r\n                    <li>lodash</li>\r\n                </ul>\r\n            <p><b>Third-party code and assets used:</b></p>\r\n                <ul className=\"third-party-about\">\r\n                    <li><a href=\"https://www.digitalocean.com/community/tutorials/react-tabs-component\">How to Build a Tabs Component with React</a> - for creating PlayDetails tabs</li>\r\n                    <li><a href=\"https://github.com/reactjs/react-transition-group/blob/master/Migration.md\">react-transition-group Migration Guide</a> - for creating HomeBrowser transition animation</li>\r\n                    <li><a href=\"https://www.w3schools.com/css/css_tooltip.asp\">CSS Tooltip Tutorial</a> - for creating Favorites arrow tooltip on hover</li>\r\n                    <li><a href=\"https://stackoverflow.com/questions/34582405/react-wont-load-local-images\">StackOverflow - React won't load local images</a> - for help with displaying images</li>\r\n                    <li><a href=\"https://loading.io/css/\">loading.io</a> - for loading animation</li>\r\n                    <li><a href=\"https://placeholder.com/\">placeholder.com</a> - for placeholder images on play cards</li>\r\n                    <li><a href=\"https://unsplash.com/photos/YLSwjSy7stw\">Alfons Morales, unsplash.com</a> - for hero image</li>\r\n                    <li><a href=\"https://toppng.com/free-image/experience-the-discussion-online-library-book-logo-PNG-free-PNG-Images_189362\">toppng.com</a> - for header logo</li>\r\n                </ul>\r\n            \r\n            <button onClick={handleClose} className=\"about-close-button\">Close</button>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default About;","import './App.css';\r\nimport HomeBrowser from './components/HomeBrowser.js';\r\nimport PlayBrowser from './components/PlayBrowser.js';\r\nimport PlayFilter from './components/PlayFilter.js';\r\nimport FavoriteBar from './components/FavoriteBar.js';\r\nimport PlayDetails from './components/PlayDetails';\r\nimport Header from './components/Header.js';\r\nimport About from './components/About.js';\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport * as cloneDeep from 'lodash/cloneDeep';\r\nimport Modal from 'react-modal';\r\n\r\nModal.setAppElement(document.querySelector(\"#root\"));\r\n\r\nfunction App() {\r\n\r\n  /**\r\n  * Array of all plays, to be kept in local storage. This hook will always store the entire array of plays\r\n  * for use in other methods. The array displayed in the play browser is the playResults hook further below.\r\n  */ \r\n  const [plays, setPlays] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Fetch all plays\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        if (localStorage.getItem(\"playsList\")) {\r\n          const data = JSON.parse(localStorage.getItem(\"playsList\"));\r\n          data.sort((a, b) => a.title > b.title ? 1 : -1);\r\n          setPlays(data);\r\n          setIsLoading(false);\r\n        } else {\r\n          const url = \"https://www.randyconnolly.com//funwebdev/3rd/api/shakespeare/list.php\";\r\n          const response = await fetch(url);\r\n          const data = await response.json();\r\n          data.sort((a, b) => a.title > b.title ? 1 : -1);\r\n          localStorage.setItem(\"playsList\", JSON.stringify(data));\r\n          setPlays(data);\r\n          setIsLoading(false);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getData();\r\n  }, [])\r\n\r\n  // Array of plays to display in PlayBrowser.\r\n  const [playResults, setPlayResults] = useState([]);\r\n\r\n  // Create new array of plays based on search query\r\n  const searchPlays = (query) => {\r\n    if (showDetails) setShowDetails(false);\r\n    const results = plays.filter(p => p.title.toLowerCase().includes(query.toLowerCase()));\r\n    setPlayResults(results);\r\n  }\r\n\r\n  // Set PlayBrowser to display all plays\r\n  const searchAllPlays = () => {\r\n    if (showDetails) setShowDetails(false);\r\n    setPlayResults(plays);\r\n  }\r\n\r\n  /**\r\n  * Sort plays by a given field as a String - either by title or by year. The resulting plays\r\n  * is then updated with the sorted plays\r\n  */\r\n  const sortPlays = (sortField) => {\r\n    const playsCopy = cloneDeep(playResults);\r\n    playsCopy.sort(function (a, b) {\r\n      if (sortField === \"title\") return a.title > b.title ? 1 : -1;\r\n      if (sortField === \"year\") return a.likelyDate > b.likelyDate ? -1 : 1;\r\n    })\r\n    setPlayResults(playsCopy);\r\n  }\r\n\r\n  // Array for favorited plays\r\n  const [favoritePlays, setFavoritePlays] = useState([]);\r\n\r\n  const addFavorite = (id) => {\r\n    const copyPlays = cloneDeep(plays);\r\n\r\n    const favPlay = copyPlays.find(p => p.id === id);\r\n\r\n    if (isDuplicate(favPlay)) {\r\n      alert(\"Play already in favorites!\");\r\n    } else {\r\n      setFavoritePlays(favoritePlays.concat(favPlay));\r\n    }\r\n\r\n  }\r\n\r\n  // Helper function to check if a play being added is already in favorites\r\n  function isDuplicate(favPlay) {\r\n    let dupe = false;\r\n    favoritePlays.forEach(p => {\r\n      if (p.id === favPlay.id) {\r\n        dupe = true;\r\n      }\r\n    });\r\n    return dupe;\r\n  }\r\n\r\n  // Removes a specific play from favorites list\r\n  const removeFavorite = (play) => {\r\n    const newFavorites = [...favoritePlays];\r\n    const index = newFavorites.indexOf(play);\r\n    newFavorites.splice(index, 1);\r\n    setFavoritePlays(newFavorites);\r\n  }\r\n\r\n  const [showFavs, setShowFavs] = useState(false);\r\n\r\n  const toggleDisplay = () => setShowFavs(!showFavs);\r\n\r\n  /**\r\n   * To filter plays, makes an array of every play by copying the 'plays' hook, then applies each\r\n   * filter to copied array as necessary. Then updates state with results to display in PlayBrowser\r\n   */\r\n  const filterPlays = (title, beforeYear, afterYear, genre) => {\r\n    let playsCopy = [...plays];\r\n    playsCopy = playsCopy.filter(p => p.title.toLowerCase().includes(title.toLowerCase()));\r\n    if (beforeYear !== \"\")\r\n      playsCopy = playsCopy.filter(p => beforeYear > p.likelyDate);\r\n    if (afterYear !== \"\")\r\n      playsCopy = playsCopy.filter(p => afterYear < p.likelyDate);\r\n    if (genre !== \"\")\r\n      playsCopy = playsCopy.filter(p => genre === p.genre);\r\n    setPlayResults(playsCopy);\r\n  }\r\n\r\n  // Hooks to be used in About menu\r\n  const [modalIsOpen, setIsOpen] = React.useState(false);\r\n  const [mainStyle, changeMainStyle] = React.useState(\"\");\r\n\r\n  function openModal() {\r\n    setIsOpen(true);\r\n    changeMainStyle(\"blur(8px)\");\r\n  }\r\n\r\n  function closeModal() {\r\n    setIsOpen(false);\r\n    changeMainStyle(\"none\");\r\n  }\r\n\r\n  // Boolean for whether or not to display play details pane\r\n  const [showDetails, setShowDetails] = useState(false);\r\n\r\n  const toggleDetails = () => setShowDetails(!showDetails);\r\n\r\n  // ID of play open in the Play Details view\r\n  const [currentPlay, setCurrentPlay] = useState(\"\");\r\n\r\n  const viewPlay = (id) => {\r\n    toggleDetails();\r\n    setCurrentPlay(id);\r\n  }\r\n\r\n  /**\r\n  * If still fetching from the API, display a loading animation. Otherwise, load the home browser.\r\n  * Loading animation source: https://loading.io/css/\r\n  */ \r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"loading-container\">\r\n        <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n        <h1>Loading...</h1>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <main id=\"app-page\" >\r\n        <Route path='/' exact render={() => {\r\n          return (\r\n            <HomeBrowser searchPlays={searchPlays} searchAllPlays={searchAllPlays} />\r\n          );\r\n        }} />\r\n        <Route path='/home' exact render={() => {\r\n          return (\r\n            <HomeBrowser searchPlays={searchPlays} searchAllPlays={searchAllPlays} />\r\n          );\r\n        }} />\r\n        <Route path='/browse' exact render={() => {\r\n          return (\r\n            <div>\r\n              {modalIsOpen ? <About closeModal={closeModal}><p>Modal</p> </About> : null}\r\n              <div style={{ filter: mainStyle }}>\r\n                <Header aboutOnClick={openModal} />\r\n                <div className=\"main-container\">\r\n                  <div>\r\n                    {!showDetails ? <PlayFilter plays={playResults} filterPlays={filterPlays} favState={showFavs}/> : null}\r\n                    {showFavs ? <button className=\"favorites-toggle-left\" onClick={toggleDisplay}>←</button>: <button className=\"favorites-toggle-right\" onClick={toggleDisplay}><span className=\"tooltip-text\">Favorites</span>→</button>}\r\n                    <article className={showFavs ? \"favorites-bar\" : \"favorites-bar-hidden\"}>\r\n                      <FavoriteBar favPlays={favoritePlays} removePlay={removeFavorite} toggleDisplay={toggleDisplay} showFavs={showFavs} viewPlay={viewPlay}/>\r\n                    </article>\r\n                  </div>\r\n                  {!showDetails ? <PlayBrowser plays={playResults} sortPlays={sortPlays} favoritePlay={addFavorite} viewPlay={viewPlay} favState={showFavs}/> : null}\r\n                  {showDetails ? <PlayDetails play={plays.find(p => p.id === currentPlay)} viewPlay={viewPlay} favoritePlay={addFavorite} showFavs={showFavs}/> : null}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        }} />\r\n      </main>\r\n    );\r\n}}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    {/* basename prop needed for Github Pages */}\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}